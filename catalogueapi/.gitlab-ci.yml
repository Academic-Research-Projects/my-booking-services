variables:
  DOCKER_HOST: 'tcp://gitlab-runner-dind:2375' # name of the container running which provides the DinD and the default port I suppose
  # Use the overlayfs driver for improved performance:
  DOCKER_DRIVER: overlay2 # optionnal
  DOCKER_TLS_CERTDIR: "" # optionnal

default:
  image: docker:stable # does not need to be equal to the [runners.docker]...image = "docker:latest" in the runner config.toml apparently
  services:
    - name: docker:dind
      alias: gitlab-runner-dind # name of the container running which provides the DinD
      entrypoint: ["dockerd-entrypoint.sh"]
      command:
        [
          "--insecure-registry",
          "172.16.239.2:5000",
        ]

  before_script:
    - docker info
    # Install Docker Compose
    - apk update
    - apk upgrade
    - apk add --no-cache docker-compose
    - docker-compose --version
    - ls -l

# define stages of the pipeline
stages:
  - build-and-deploy

build-and-deploy:
  stage: build-and-deploy
  before_script:
    - apk add --update ansible && ansible --version
    - apk add --update ansible openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY"
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H 172.16.239.2 >> ~/.ssh/known_hosts

  script:
    - docker build -t 172.16.239.2:5000/catalogue-api:0.1 catalogue_api/
    - docker image ls
    - docker push 172.16.239.2:5000/catalogue-api:0.1

    # deploy new container using ansible
    - ansible-playbook -i ansible/inventory/inventory.yaml ansible/playbook-deploy-catalogue.yaml
